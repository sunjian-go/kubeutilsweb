apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: kubeagent
spec: {}
status: {}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: kubeagent
  namespace: kubeagent

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kubeagent-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubeagent
  namespace: kubeagent

---
apiVersion: v1
data:
  conf.ini: |-
    [server]
    server_addr = 1.1.1.1      
    port = 8999                      

    [agent]
    cluster_name = test               
    agent_addr = 1.1.1.1       
    port = 8081                 
kind: ConfigMap
metadata:
  labels:
    cattle.io/creator: norman
  name: agentconf
  namespace: kubeagent

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-middleware-kubeagent
  name: kubeagent
  namespace: kubeagent
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-middleware-kubeagent
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-middleware-kubeagent
    spec:
      containers:
      - image: harbor-tj.ts-it.cn:63333/kubeutils/kubeagent:v1.1
        imagePullPolicy: IfNotPresent
        name: kubeagent
        ports:
        - containerPort: 8081
          name: port
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /home/kubeAgent/conf/conf.ini
          name: vol1
          subPath: conf.ini
        - mountPath: /etc/localtime
          name: time
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kubeagent
      serviceAccountName: kubeagent
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 256
          name: agentconf
          optional: false
        name: vol1
      - hostPath:
          path: /etc/localtime
          type: ""
        name: time
      
---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-middleware-kubeagent
  name: kubeagent
  namespace: kubeagent
spec:
  ports:
  - name: port
    nodePort: 8081
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    workload.user.cattle.io/workloadselector: deployment-middleware-kubeagent
  type: NodePort
status:
  loadBalancer: {}
  
